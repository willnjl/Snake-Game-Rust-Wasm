"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkwww"] = self["webpackChunkwww"] || []).push([["index_ts"],{

/***/ "../pkg/snake_game.js":
/*!****************************!*\
  !*** ../pkg/snake_game.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DirectionKind: () => (/* binding */ DirectionKind),\n/* harmony export */   GameState: () => (/* binding */ GameState),\n/* harmony export */   GameStateKind: () => (/* binding */ GameStateKind),\n/* harmony export */   World: () => (/* binding */ World),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   initSync: () => (/* binding */ initSync)\n/* harmony export */ });\n/* harmony import */ var _snippets_snake_game_027f5cd2d64d2885_www_utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./snippets/snake_game-027f5cd2d64d2885/www/utils/index.js */ \"../pkg/snippets/snake_game-027f5cd2d64d2885/www/utils/index.js\");\n\n\nlet wasm;\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n/**\n*/\nconst GameStateKind = Object.freeze({ Won:0,\"0\":\"Won\",Lost:1,\"1\":\"Lost\",Played:2,\"2\":\"Played\",Paused:3,\"3\":\"Paused\", });\n/**\n*/\nconst DirectionKind = Object.freeze({ Up:0,\"0\":\"Up\",Right:1,\"1\":\"Right\",Down:2,\"2\":\"Down\",Left:3,\"3\":\"Left\", });\n/**\n*/\nclass GameState {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(GameState.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_gamestate_free(ptr);\n    }\n    /**\n    * @returns {GameState}\n    */\n    static new() {\n        const ret = wasm.gamestate_new();\n        return GameState.__wrap(ret);\n    }\n    /**\n    */\n    playing() {\n        wasm.gamestate_playing(this.__wbg_ptr);\n    }\n    /**\n    */\n    lost() {\n        wasm.gamestate_lost(this.__wbg_ptr);\n    }\n    /**\n    */\n    won() {\n        wasm.gamestate_won(this.__wbg_ptr);\n    }\n    /**\n    */\n    pause() {\n        wasm.gamestate_pause(this.__wbg_ptr);\n    }\n    /**\n    * @returns {GameStateKind | undefined}\n    */\n    get() {\n        const ret = wasm.gamestate_get(this.__wbg_ptr);\n        return ret === 4 ? undefined : ret;\n    }\n    /**\n    * @returns {string}\n    */\n    status() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.gamestate_status(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    btn() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.gamestate_btn(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n}\n/**\n*/\nclass World {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(World.prototype);\n        obj.__wbg_ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_world_free(ptr);\n    }\n    /**\n    * @param {number} width\n    * @param {number} starting_size\n    * @returns {World}\n    */\n    static new(width, starting_size) {\n        const ret = wasm.world_new(width, starting_size);\n        return World.__wrap(ret);\n    }\n    /**\n    * @returns {string}\n    */\n    game_status_text() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.world_game_status_text(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n    * @returns {string}\n    */\n    game_btn_text() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.world_game_btn_text(retptr, this.__wbg_ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            deferred1_0 = r0;\n            deferred1_1 = r1;\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n    */\n    handle_click() {\n        wasm.world_handle_click(this.__wbg_ptr);\n    }\n    /**\n    */\n    step() {\n        wasm.world_step(this.__wbg_ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    width() {\n        const ret = wasm.world_width(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    size() {\n        const ret = wasm.world_size(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    *\n    *     * *const is raw pointer\n    *     * borrowing rules dont apply\n    *\n    * @returns {number}\n    */\n    snake_cells() {\n        const ret = wasm.world_snake_cells(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    snake_length() {\n        const ret = wasm.world_snake_length(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    reward_cell() {\n        const ret = wasm.world_reward_cell(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {DirectionKind} direction\n    */\n    change_snake_direction(direction) {\n        wasm.world_change_snake_direction(this.__wbg_ptr, direction);\n    }\n    /**\n    * @returns {number}\n    */\n    points() {\n        const ret = wasm.world_points(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_rnd_48e76ae6b77b8bdb = function(arg0) {\n        const ret = (0,_snippets_snake_game_027f5cd2d64d2885_www_utils_index_js__WEBPACK_IMPORTED_MODULE_0__.rnd)(arg0 >>> 0);\n        return ret;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedInt32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input) {\n    if (wasm !== undefined) return wasm;\n\n    if (typeof input === 'undefined') {\n        input = new URL(/* asset import */ __webpack_require__(/*! snake_game_bg.wasm */ \"../pkg/snake_game_bg.wasm\"), __webpack_require__.b);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__wbg_init);\n\n\n//# sourceURL=webpack://www/../pkg/snake_game.js?");

/***/ }),

/***/ "../pkg/snippets/snake_game-027f5cd2d64d2885/www/utils/index.js":
/*!**********************************************************************!*\
  !*** ../pkg/snippets/snake_game-027f5cd2d64d2885/www/utils/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   log: () => (/* binding */ log),\n/* harmony export */   rnd: () => (/* binding */ rnd)\n/* harmony export */ });\nconst rnd = (max) => Math.floor(Math.random() * max);\nconst log = (str) => console.log(str);\n\n\n//# sourceURL=webpack://www/../pkg/snippets/snake_game-027f5cd2d64d2885/www/utils/index.js?");

/***/ }),

/***/ "./index.ts":
/*!******************!*\
  !*** ./index.ts ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var snake_game__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! snake_game */ \"../pkg/snake_game.js\");\n/* harmony import */ var _src_paint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/paint */ \"./src/paint.ts\");\n/* harmony import */ var _src_events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/events */ \"./src/events.ts\");\n/* harmony import */ var _src_consts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/consts */ \"./src/consts.ts\");\n\n\n\n\n(0,snake_game__WEBPACK_IMPORTED_MODULE_3__[\"default\"])().then(function (wasm) {\n    var world = snake_game__WEBPACK_IMPORTED_MODULE_3__.World.new(_src_consts__WEBPACK_IMPORTED_MODULE_2__.GRID_WIDTH, _src_consts__WEBPACK_IMPORTED_MODULE_2__.SNAKE_START_LENGTH);\n    var worldWidth = world.width();\n    _src_consts__WEBPACK_IMPORTED_MODULE_2__.canvas.height = worldWidth * _src_consts__WEBPACK_IMPORTED_MODULE_2__.CELL_SIZE + 1;\n    _src_consts__WEBPACK_IMPORTED_MODULE_2__.canvas.width = worldWidth * _src_consts__WEBPACK_IMPORTED_MODULE_2__.CELL_SIZE + 1;\n    var play = function () {\n        var paintProps = {\n            ctx: _src_consts__WEBPACK_IMPORTED_MODULE_2__.ctx,\n            world: world,\n            wasm: wasm\n        };\n        setTimeout(function () {\n            _src_consts__WEBPACK_IMPORTED_MODULE_2__.ctx.clearRect(0, 0, _src_consts__WEBPACK_IMPORTED_MODULE_2__.canvas.width, _src_consts__WEBPACK_IMPORTED_MODULE_2__.canvas.height);\n            (0,_src_paint__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(paintProps);\n            world.step();\n            requestAnimationFrame(play);\n        }, 1000 / _src_consts__WEBPACK_IMPORTED_MODULE_2__.FPS);\n    };\n    document.addEventListener('keydown', function (e) { return (0,_src_events__WEBPACK_IMPORTED_MODULE_1__.handleKeyPress)(e, world); });\n    _src_consts__WEBPACK_IMPORTED_MODULE_2__.gameControlBtn.addEventListener('click', function (e) { return (0,_src_events__WEBPACK_IMPORTED_MODULE_1__.handleControlBtnClick)(e, world); });\n    play();\n});\n\n\n//# sourceURL=webpack://www/./index.ts?");

/***/ }),

/***/ "./src/consts.ts":
/*!***********************!*\
  !*** ./src/consts.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CELL_SIZE: () => (/* binding */ CELL_SIZE),\n/* harmony export */   FPS: () => (/* binding */ FPS),\n/* harmony export */   GRID_WIDTH: () => (/* binding */ GRID_WIDTH),\n/* harmony export */   RAND_START: () => (/* binding */ RAND_START),\n/* harmony export */   SNAKE_BODY_COLOR: () => (/* binding */ SNAKE_BODY_COLOR),\n/* harmony export */   SNAKE_HEAD_COLOR: () => (/* binding */ SNAKE_HEAD_COLOR),\n/* harmony export */   SNAKE_START_LENGTH: () => (/* binding */ SNAKE_START_LENGTH),\n/* harmony export */   canvas: () => (/* binding */ canvas),\n/* harmony export */   ctx: () => (/* binding */ ctx),\n/* harmony export */   gameControlBtn: () => (/* binding */ gameControlBtn),\n/* harmony export */   gamePointsText: () => (/* binding */ gamePointsText),\n/* harmony export */   gameStatusText: () => (/* binding */ gameStatusText)\n/* harmony export */ });\n/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index */ \"./utils/index.js\");\n\nvar GRID_WIDTH = 20;\nvar RAND_START = (0,_utils_index__WEBPACK_IMPORTED_MODULE_0__.rnd)(GRID_WIDTH * GRID_WIDTH);\nvar FPS = 10;\nvar CELL_SIZE = 10;\nvar SNAKE_START_LENGTH = 3;\nvar SNAKE_HEAD_COLOR = \"#0D2818\";\nvar SNAKE_BODY_COLOR = \"#058C42\";\nvar canvas = document.querySelector(\"#snake-canvas\");\nvar ctx = canvas.getContext(\"2d\");\nvar gameControlBtn = document.getElementById('game-control-btn');\nvar gameStatusText = document.getElementById('game-status');\nvar gamePointsText = document.getElementById('game-points');\n\n\n//# sourceURL=webpack://www/./src/consts.ts?");

/***/ }),

/***/ "./src/events.ts":
/*!***********************!*\
  !*** ./src/events.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleControlBtnClick: () => (/* binding */ handleControlBtnClick),\n/* harmony export */   handleKeyPress: () => (/* binding */ handleKeyPress)\n/* harmony export */ });\n/* harmony import */ var snake_game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! snake_game */ \"../pkg/snake_game.js\");\n\nvar handleKeyPress = function (e, world) {\n    if (e.code === \"ArrowLeft\") {\n        world.change_snake_direction(snake_game__WEBPACK_IMPORTED_MODULE_0__.DirectionKind.Left);\n    }\n    if (e.code === \"ArrowRight\") {\n        world.change_snake_direction(snake_game__WEBPACK_IMPORTED_MODULE_0__.DirectionKind.Right);\n    }\n    if (e.code === \"ArrowUp\") {\n        world.change_snake_direction(snake_game__WEBPACK_IMPORTED_MODULE_0__.DirectionKind.Up);\n    }\n    if (e.code === \"ArrowDown\") {\n        world.change_snake_direction(snake_game__WEBPACK_IMPORTED_MODULE_0__.DirectionKind.Down);\n    }\n    world.step();\n};\nvar handleControlBtnClick = function (event, world) {\n    world.handle_click();\n};\n\n\n//# sourceURL=webpack://www/./src/events.ts?");

/***/ }),

/***/ "./src/paint.ts":
/*!**********************!*\
  !*** ./src/paint.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _consts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./consts */ \"./src/consts.ts\");\n\n\nfunction drawWorld(_a) {\n    var world = _a.world, ctx = _a.ctx;\n    var worldWidth = world.width();\n    ctx.strokeStyle = \"#eee\";\n    ctx.beginPath();\n    for (var x = 0; x < worldWidth + 1; x++) {\n        ctx.moveTo(_consts__WEBPACK_IMPORTED_MODULE_0__.CELL_SIZE * x + 1, 0);\n        ctx.lineTo(_consts__WEBPACK_IMPORTED_MODULE_0__.CELL_SIZE * x + 1, worldWidth * _consts__WEBPACK_IMPORTED_MODULE_0__.CELL_SIZE);\n    }\n    for (var y = 0; y < worldWidth + 1; y++) {\n        ctx.moveTo(0, _consts__WEBPACK_IMPORTED_MODULE_0__.CELL_SIZE * y + 1);\n        ctx.lineTo(worldWidth * _consts__WEBPACK_IMPORTED_MODULE_0__.CELL_SIZE, _consts__WEBPACK_IMPORTED_MODULE_0__.CELL_SIZE * y + 1);\n    }\n    ctx.stroke();\n}\nfunction drawSnake(_a) {\n    var wasm = _a.wasm, world = _a.world, ctx = _a.ctx;\n    var worldWidth = world.width();\n    var snakeCells = new Uint32Array(wasm.memory.buffer, world.snake_cells(), world.snake_length());\n    snakeCells.slice().reverse().forEach(function (cell, i) {\n        var index = cell;\n        var posX = index % worldWidth;\n        var posY = Math.floor(index / worldWidth);\n        ctx.fillStyle = i === snakeCells.length - 1 ? _consts__WEBPACK_IMPORTED_MODULE_0__.SNAKE_HEAD_COLOR : _consts__WEBPACK_IMPORTED_MODULE_0__.SNAKE_BODY_COLOR;\n        ctx.beginPath();\n        ctx.moveTo(posX, posY);\n        ctx.fillRect(posX * _consts__WEBPACK_IMPORTED_MODULE_0__.CELL_SIZE, posY * _consts__WEBPACK_IMPORTED_MODULE_0__.CELL_SIZE, _consts__WEBPACK_IMPORTED_MODULE_0__.CELL_SIZE, _consts__WEBPACK_IMPORTED_MODULE_0__.CELL_SIZE);\n        ctx.stroke();\n    });\n}\nfunction drawReward(_a) {\n    var world = _a.world, ctx = _a.ctx;\n    var worldWidth = world.width();\n    var cellIndex = world.reward_cell();\n    var posX = cellIndex % worldWidth;\n    var posY = Math.floor(cellIndex / worldWidth);\n    ctx.fillStyle = \"#FF0000\";\n    ctx.beginPath();\n    ctx.fillRect(posX * _consts__WEBPACK_IMPORTED_MODULE_0__.CELL_SIZE, posY * _consts__WEBPACK_IMPORTED_MODULE_0__.CELL_SIZE, _consts__WEBPACK_IMPORTED_MODULE_0__.CELL_SIZE, _consts__WEBPACK_IMPORTED_MODULE_0__.CELL_SIZE);\n    ctx.stroke();\n    if (cellIndex == undefined) {\n        alert(\"Your Won!\");\n    }\n}\nfunction drawGameStatus(_a) {\n    var world = _a.world;\n    _consts__WEBPACK_IMPORTED_MODULE_0__.gameStatusText.innerHTML = world.game_status_text();\n    _consts__WEBPACK_IMPORTED_MODULE_0__.gamePointsText.innerHTML = world.points().toString();\n    _consts__WEBPACK_IMPORTED_MODULE_0__.gameControlBtn.innerHTML = world.game_btn_text();\n}\nvar paint = function (props) {\n    drawWorld(props);\n    drawSnake(props);\n    drawReward(props);\n    drawGameStatus(props);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (paint);\n\n\n//# sourceURL=webpack://www/./src/paint.ts?");

/***/ }),

/***/ "./utils/index.js":
/*!************************!*\
  !*** ./utils/index.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   log: () => (/* binding */ log),\n/* harmony export */   rnd: () => (/* binding */ rnd)\n/* harmony export */ });\nconst rnd = (max) => Math.floor(Math.random() * max);\nconst log = (str) => console.log(str);\n\n\n//# sourceURL=webpack://www/./utils/index.js?");

/***/ }),

/***/ "../pkg/snake_game_bg.wasm":
/*!*********************************!*\
  !*** ../pkg/snake_game_bg.wasm ***!
  \*********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"89d7825fae03d0065c9a.wasm\";\n\n//# sourceURL=webpack://www/../pkg/snake_game_bg.wasm?");

/***/ })

}]);